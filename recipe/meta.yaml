{% set name = "ctypesgen" %}
{% set version = "1.1.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/{{ name }}/{{ name }}/releases/download/{{ version }}/{{ name }}-{{ version }}.tar.gz
  sha256: deaa2d64a95d90196a2e8a689cf9b952be6f3366f81e835245354bf9dbac92f6

build:
  entry_points:
    - ctypesgen = ctypesgen.main:main
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    - python

test:
  imports:
    - ctypesgen
  requires:
    - pip
  commands:
    - pip check
    - ctypesgen --help

about:
  home: https://github.com/ctypesgen/ctypesgen
  dev_url: https://github.com/ctypesgen/ctypesgen.git
  doc_url: https://github.com/ctypesgen/ctypesgen
  license: BSD-2-Clause
  license_file: LICENSE
  license_family: BSD
  summary: Python wrapper generator for ctypes
  description:
    ctypesgen reads parses c header files and creates a wrapper for
    libraries based on what it finds.
    Preprocessor macros are handled in a manner consistent with typical
    c code.
    Preprocessor macro functions are translated into Python functions
    that are then made available to the user of the newly-generated
    Python wrapper library.
    ctypesgen can also output JSON, which can be used with Mork, which
    generates bindings for Lua, using the alien module
    (which binds libffi to Lua).

extra:
  recipe-maintainers:
    - duncanmmacleod
